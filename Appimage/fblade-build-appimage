#!/bin/bash

# Make sure were in script dir
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

# Export build dirs and create
export SCRIPT_DIR=$DIR
export SRC_DIR=$SCRIPT_DIR"/src"

if [ ! -d "$SRC_DIR" ]; then
  mkdir $SRC_DIR
fi

INSTALL_ROOT_DIR=$DIR
USR_LIB_DIR="/usr/lib/x86_64-linux-gnu"
export FINAL_INSTALL_DIR=$INSTALL_ROOT_DIR$USR_LIB_DIR
echo $FINAL_INSTALL_DIR

export INCLUDE_DIR=$FINAL_INSTALL_DIR"/include"
export LIB_DIR=$FINAL_INSTALL_DIR
export FREIOR_DIR=$INSTALL_ROOT_DIR"/usr/lib"
export PKG_CONFIG_PATH="$FINAL_INSTALL_DIR/pkgconfig:$PKG_CONFIG_PATH"

# Compile libs
#$DIR/compile-libs


# Recipe is available from appimage people, get it, run it.
########   Recipe is broken, but earlier version works wget "https://github.com/probonopd/AppImages/raw/master/recipes/meta/Recipe"
bash -ex Recipe Flowblade


# Binaries are installed in 
LIBS_SOURCE_DIR=$FINAL_INSTALL_DIR


# Copy libs and mlt.py and_mlt.so
./libcopy $LIBS_SOURCE_DIR > l1
./mltpycopy $DIR"/src" > l2
./libfixlinks $LIBS_SOURCE_DIR $DIR > l3


# Build AppImage with new binaries
cd $DIR
cd Flowblade 
./appimagetool ./Flowblade.AppDir


echo "AppImage created with new binaries."


# Go back script dir
cd ..

